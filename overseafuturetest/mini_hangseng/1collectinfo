# 처음
1. 이베스트 로그인 : 실제, 모의
2. 1,5분 데이터 n번 반복 가져오기[일시, 시가, 고가, 저가, 종가, 거래량]
3. 1,5분 데이터 최저선, 최대선 가져오기(f_long 지정)[일시, 가격, 거래량, 구분]
 - 구분 : 1분-최대, 1분-최저, 5분-최대, 5분-최저
4. 1,5분 데이터 1분, 5분 단위로 가져오기(s_long 지정[f_long > s_long])
5. 1,5분 데이터 최저선, 최대선 1분, 5분 단위로 가져오기[일시, 시가, 고가, 저가, 종가, 거래량]
 - 최저선, 최대선의 마지막 일자부터 계속 조회[일시, 가격, 거래량, 구분]
6. 첫터치, 둘터치 구하기
 - close_ago >= dataset.iloc[i]['가격'] >= close
 1) 첫터치
 - 최저 : 최저선이 전 가격보다 작고, 현재 가격보다 큼
 - 최대 : 최저선이 전 가격보다 크고, 현재 가격보다 작음
 2) 둘터치 
 - 최저 : 최저선이 전 가격보다 크고, 현재 가격보다 작음
 - 최대 : 최저선이 전 가격보다 작고, 현재 가격보다 큼
 7. 둘터치 발생 시 메세지로 알리고, 첫터치, 둘터치 '없음'으로 초기화
  
---------------------------------------------------------------------
# 1차 수정 사항
1. 이평선, 이격도 추가
 - 이평선 데이터 추가
 - 저가, 고가 이격도 추가
 - 해당 이평선을 이용해서 이격도 구하기
  : 첫터치와 둘터치 사이의 최소, 최대값의 이격도가 필요

2. 최저, 최대선의 수정 - f_long
 - 오름추세 or 내림추세에서의 추세선인지 판단
 1) 최저선 
  - 전수, 후수 => '전수-현재 중 최대값'(A)과 '현재-후수 중 최대값'(B) 비교
  - A > B : 하락세, A < B : 상승세
 2) 최대선
  - 전수, 후수 => '전수-현재 중 최소값'(A)과 '현재-후수 중 최소값'(B) 비교
  - A > B : 하락세, A < B : 상승세
3. 최저, 최대선의 수정 - s_long
 - 오름추세 or 내림추세에서의 추세선인지 판단
 1) 최저선 
  - 전수, 후수 => '전수-현재 중 최대값'(A)과 '현재-후수 중 최대값'(B) 비교
  - A > B : 하락세, A < B : 상승세
 2) 최대선
  - 전수, 후수 => '전수-현재 중 최소값'(A)과 '현재-후수 중 최소값'(B) 비교
  - A > B : 하락세, A < B : 상승세
  
 4. 터치 수정
 - 추세 구하기
 상승 확실 = 매도진입X
 하락 확실 = 매수진입X
 매수 과열 = 매도진입O 
 매도 과열 = 매수진입O

5. 최저선들 비슷한 가격대 통합
 - 100틱 중 최대, 최저만 남기기
6. 최대선들 비슷한 가격대 통합
 - 100틱 중 최대, 최저만 남기기
 
---------------------------------------------------------------------
# 2차 수정 사항
1. 첫터치봉, 둘터치봉 수정
1) 매수진입
 - 첫터치 : 음봉, 둘터치 : 양봉
 - 음봉 시가 < 양봉 종가

2) 매도진입
 - 첫터치 : 양봉, 둘터치 : 음봉
 - 양봉 시가 > 음봉 종가
2. 첫터치, 둘터치의 간격을 n분 이하로 정하기
 -1분 : 3~5이하
 -5분 : 1~2이하
 
 --------------------------------------------------------------------
# 보낼메세지
sendMessage = "최저선(신호) 순번/일시/가격/추세/구분 : " + str(i) + " / " + minline_dd + " / " + minline_price + " / " + minline_trend + " / " + minline_gubun + \
"\n첫터치(대기) 일시 : " + first_touch_dd + \
"\n둘터치(진입) 일시 : " + second_touch_dd + \
"\n진입가 / 포지션 : " + str(close_1m) + " / " + invest_how + \
"\n손절가 / 청산가 : " + str(stop_loss)+"("+str(tic_num)+"틱)" + " / " + str(goal_price)+"("+str(tic_num)+"틱)" + \
"\n이격도 : " + str(separation_1m)

# 메세지 보내기
token = cacao_login_cls.auth_refresh(self) # 토큰 초기화
cacao_login_cls.send_myself(self, token, sendMessage) # 나에게 메세지보내기

# 보낼메세지
sendMessage = "최저선(신호) 일시/가격/추세/구분 : " + str(i) + " / " + minline_dd + " / " + minline_price + " / " + minline_trend + " / " + minline_gubun + \
"\n첫터치(대기) 일시 : " + first_touch_dd + \
"\n둘터치(진입) 일시 : " + second_touch_dd + \
"\n진입가 / 포지션 : " + str(close_5m) + " / " + invest_how + \
"\n손절가 / 청산가 : " + str(stop_loss)+"("+str(tic_num)+"틱)" + " / " + str(goal_price)+"("+str(tic_num)+"틱)" + \
"\n이격도 : " + str(separation_5m)

# 메세지 보내기
token = cacao_login_cls.auth_refresh(self) # 토큰 초기화
cacao_login_cls.send_myself(self, token, sendMessage) # 나에게 메세지보내기
                
----------------------------------------------------------------------
# 3차 수정 사항
- 청산가를 청산,손절 틱수의 크기에 따라 나누기
0~20 안뺌
20~30 -5
30~50 -10
50~70 -15
70~100 -20
100~150 -30
150이상 -60

if 0 <= OVH_cls.tic < 20 :
    fuck_you = 0.0
elif 20 <= OVH_cls.tic < 30 :
    fuck_you = 5.0 
elif 30 <= OVH_cls.tic < 50 :
    fuck_you = 10.0
elif 50 <= OVH_cls.tic < 70 :
    fuck_you = 15.0
elif 70 <= OVH_cls.tic < 100 :
    fuck_you = 20.0
elif 100 <= OVH_cls.tic < 150 :
    fuck_you = 30.0
elif 150 <= OVH_cls.tic :
    fuck_you = 60.0
    
----------------------------------------------------------------------
# 4차 수정사항
- 둘터치 시 신호 실패에 대하여 둘터치 일시를 첫터치로 변경하는 로직 추가
- 청사가를 청산, 손절 틱수의 크기에 따라 나누기(수정)
# 적어도 틱수가 10 이상인 것만 투자하는 걸로 바꾸기
if 10 <= OVH_cls.tic < 20 :
    fuck_you = -5.0
elif 20 <= OVH_cls.tic < 30 :
    fuck_you = 0.0
elif 30 <= OVH_cls.tic < 50 :
    fuck_you = 5.0 
elif 50 <= OVH_cls.tic < 70 :
    fuck_you = 10.0
elif 70 <= OVH_cls.tic < 90 :
    fuck_you = 15.0
elif 90 <= OVH_cls.tic < 110 :
    fuck_you = 20.0
elif 100 <= OVH_cls.tic < 150 :
    fuck_you = 30.0
elif 150 <= OVH_cls.tic < 200 :
    fuck_you = 50.0
elif 200 <= OVH_cls.tic :
    fuck_you = 100.0
    
-----------------------------------------------------------------------
# 5차 수정사항
1) 5분봉 데이터 제거
2) RSI, 이평선 추가
1. 매수(1)
 RSI : 30이하
 이평 : 

2. 매수(2)
 RSI : 30~45
 이평 : 이평선-진입가 > tic_num
	or 이평선-진입가 > 몸통틱수

5. 진입 X
 RSI : 45~55

3. 매도(1)
 RSI : 70이상
 이평 :

4. 매도(2)
 RSI : 55~70
 이평 : 이평선-진입가 > tic_num
	or 이평선-진입가 > 몸통틱수

6. 반대매매
 RSI : 30이하 or 70이상
 이평 : 이평선-진입가 > tic_num
 손절시 반대방향 매매 바로진입


RSI는 전봉을 기준
전봉이 30이하, 70이하이면 무조건 진입 O
전봉이 30~45, 55~70이면 조건 진입 O

둘터치 RSI 45~55사이여도 투자 X

-----------------------------------------------------------------------
# 5차 수정사항
1) 최대최저선 조건을 변경하기 - 전일, 당일로만 구성(전일은 전일 최고, 최저만 / 당일은 10봉 최대최저선 + 당일 최대, 최저, 중간선)
전일 : 최대선 / 최저선
당일 : 지지저항선 = 10봉 / 중앙선 / 최대선 / 최저선

범위 : 최대선 - 고가~종가 / 최저선 - 종가-저가
전일 : 최대, 최저선 = 범위 
당일 : 지지저항(10봉) = 선
당일 : 최대, 최저선 = 범위
당일 : 중앙선 = 선

-----------------------------------------------------------------------
# 6차 수정사항
1. 최저선, 최대선 한번 청산시 해당 최저선, 최대선은 지우기? 확인 필요
 => 해당 최저선을 뚫고 새로운 최저선 생김(위로올라간 최저선은 제외) = 최저선 없애기
 => 해당 최대선을 뚫고 새로운 최대선 생김(아래로 내려간 최대선은 제외) = 최대선 없애기
 => [적용 OK]
 
